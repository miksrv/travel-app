name: Checks

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  ui-checks:
    if: github.event.pull_request.draft == false
    name: UI Client
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
          cache-dependency-path: 'client/yarn.lock'

      - name: Cache node modules
        uses: actions/cache@v4
        id: cache-npm
        with:
          path: |
            client/node_modules
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-modules-${{ hashFiles('client/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install dependencies
        working-directory: client
        run: yarn workspaces focus

      - name: Linter
        run: yarn eslint:check
        working-directory: client

      - name: Prettier
        run: yarn prettier:check
        working-directory: client

      - name: Cache UI build
        uses: actions/cache@v4
        id: cache-build
        with:
          path: client/.next
          key: ${{ runner.os }}-build-${{ hashFiles('client/**/*.ts', 'client/**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        name: Configure Client
        run: |
          echo "NEXT_PUBLIC_MAPBOX_TOKEN = '${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}'
          NEXT_PUBLIC_CYCLEMAP_TOKEN = '${{ secrets.NEXT_PUBLIC_CYCLEMAP_TOKEN }}'
          NEXT_PUBLIC_API_HOST = '${{ secrets.NEXT_PUBLIC_API_HOST }}'
          NEXT_PUBLIC_SITE_LINK = '${{ secrets.NEXT_PUBLIC_SITE_LINK }}'" > .env
        working-directory: client

      - name: UI Unit Tests
        run: yarn test
        working-directory: client

      - if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
        name: Build UI
        run: |
          export dateNow=$(date +"%Y-%m-%dT%H:%M")
          echo "export const update = '$dateNow'" > update.ts
          yarn build
        working-directory: client

  api-checks:
    if: github.event.pull_request.draft == false
    name: API Server
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        working-directory: server

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('server/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --no-dev --no-progress --prefer-dist --optimize-autoloader
        working-directory: server
